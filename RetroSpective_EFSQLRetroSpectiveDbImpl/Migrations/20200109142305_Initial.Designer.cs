// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Retrospective_EFSQLRetrospectiveDbImpl;

namespace RetroSpective_EFSQLRetroSpectiveDbImpl.Migrations
{
    [DbContext(typeof(RetroSpectiveDbContext))]
    [Migration("20200109142305_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Retrospective_Core.Models.RetroCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DownVotes")
                        .HasColumnType("int");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int>("RetroColumnId")
                        .HasColumnType("int");

                    b.Property<int>("RetroFamilyId")
                        .HasColumnType("int");

                    b.Property<int>("UpVotes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RetroColumnId");

                    b.HasIndex("RetroFamilyId");

                    b.ToTable("RetroCards");
                });

            modelBuilder.Entity("Retrospective_Core.Models.RetroColumn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RetrospectiveId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RetrospectiveId");

                    b.ToTable("RetroColumns");
                });

            modelBuilder.Entity("Retrospective_Core.Models.RetroFamily", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int>("RetroColumnId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RetroColumnId");

                    b.ToTable("RetroFamilies");
                });

            modelBuilder.Entity("Retrospective_Core.Models.Retrospective", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("Date");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Retrospectives");
                });

            modelBuilder.Entity("Retrospective_Core.Models.RetroCard", b =>
                {
                    b.HasOne("Retrospective_Core.Models.RetroColumn", "RetroColumn")
                        .WithMany("RetroCards")
                        .HasForeignKey("RetroColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Retrospective_Core.Models.RetroFamily", "RetroFamily")
                        .WithMany("RetroCards")
                        .HasForeignKey("RetroFamilyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Retrospective_Core.Models.RetroColumn", b =>
                {
                    b.HasOne("Retrospective_Core.Models.Retrospective", "Retrospective")
                        .WithMany("RetroColumns")
                        .HasForeignKey("RetrospectiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Retrospective_Core.Models.RetroFamily", b =>
                {
                    b.HasOne("Retrospective_Core.Models.RetroColumn", "RetroColumn")
                        .WithMany("RetroFamilies")
                        .HasForeignKey("RetroColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
