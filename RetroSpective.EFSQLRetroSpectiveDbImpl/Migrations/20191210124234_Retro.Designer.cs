// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RetroSpective.EFSQLRetroSpectiveDbImpl;

namespace Retrospective.EFSQLRetroSpectiveDbImpl.Migrations
{
    [DbContext(typeof(RetroSpectiveDbContext))]
    [Migration("20191210124234_Retro")]
    partial class Retro
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RetroSpective.Core.Models.Facilitator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Retrospective")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Retrospective");

                    b.ToTable("Facilitators");
                });

            modelBuilder.Entity("RetroSpective.Core.Models.Participant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Participants")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Participants");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("RetroSpective.Core.Models.RetroCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RetroCards")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RetroCards");

                    b.ToTable("RetroCards");
                });

            modelBuilder.Entity("RetroSpective.Core.Models.RetroColumn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RetroColumns")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RetroColumns");

                    b.ToTable("RetroColumns");
                });

            modelBuilder.Entity("RetroSpective.Core.Models.RetroSpective", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RetroSpectives");
                });

            modelBuilder.Entity("RetroSpective.Core.Models.Facilitator", b =>
                {
                    b.HasOne("RetroSpective.Core.Models.RetroSpective", "RetroSpective")
                        .WithMany()
                        .HasForeignKey("Retrospective");
                });

            modelBuilder.Entity("RetroSpective.Core.Models.Participant", b =>
                {
                    b.HasOne("RetroSpective.Core.Models.Facilitator", null)
                        .WithMany("Participants")
                        .HasForeignKey("Participants");
                });

            modelBuilder.Entity("RetroSpective.Core.Models.RetroCard", b =>
                {
                    b.HasOne("RetroSpective.Core.Models.RetroColumn", null)
                        .WithMany("RetroCards")
                        .HasForeignKey("RetroCards");
                });

            modelBuilder.Entity("RetroSpective.Core.Models.RetroColumn", b =>
                {
                    b.HasOne("RetroSpective.Core.Models.RetroSpective", null)
                        .WithMany("RetroColumns")
                        .HasForeignKey("RetroColumns");
                });
#pragma warning restore 612, 618
        }
    }
}
